// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P5CreateFirstAppDotNet.Data;

#nullable disable

namespace P5CreateFirstAppDotNet.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeOfMediaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeOfMediaId");

                    b.ToTable("Medias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Car 1 Image",
                            Path = "/images/vehicles/Car (1).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Label = "Car 2 Image",
                            Path = "/images/vehicles/Car (2).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 3,
                            Label = "Car 3 Image",
                            Path = "/images/vehicles/Car (3).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 4,
                            Label = "Car 4 Image",
                            Path = "/images/vehicles/Car (4).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 5,
                            Label = "Car 5 Image",
                            Path = "/images/vehicles/Car (5).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 6,
                            Label = "Car 6 Image",
                            Path = "/images/vehicles/Car (6).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 7,
                            Label = "Car 7 Image",
                            Path = "/images/vehicles/Car (7).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 8,
                            Label = "Car 8 Image",
                            Path = "/images/vehicles/Car (8).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 9,
                            Label = "Car 9 Image",
                            Path = "/images/vehicles/Car (9).jpg",
                            TypeOfMediaId = 1
                        },
                        new
                        {
                            Id = 10,
                            Label = "Car 10 Image",
                            Path = "/images/vehicles/Car (10).jpg",
                            TypeOfMediaId = 1
                        });
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PurchaseDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 15000.00m,
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 2,
                            PurchaseDate = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 20000.00m,
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 3,
                            PurchaseDate = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 18000.00m,
                            VehicleId = 3
                        },
                        new
                        {
                            Id = 4,
                            PurchaseDate = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 22000.00m,
                            VehicleId = 4
                        },
                        new
                        {
                            Id = 5,
                            PurchaseDate = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 25000.00m,
                            VehicleId = 5
                        },
                        new
                        {
                            Id = 6,
                            PurchaseDate = new DateTime(2023, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 30000.00m,
                            VehicleId = 6
                        },
                        new
                        {
                            Id = 7,
                            PurchaseDate = new DateTime(2023, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 27000.00m,
                            VehicleId = 7
                        },
                        new
                        {
                            Id = 8,
                            PurchaseDate = new DateTime(2023, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 32000.00m,
                            VehicleId = 8
                        },
                        new
                        {
                            Id = 9,
                            PurchaseDate = new DateTime(2023, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 29000.00m,
                            VehicleId = 9
                        });
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.Repair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RepairCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RepairDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Repairs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Repair description 1",
                            RepairCost = 500.00m,
                            RepairDate = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Repair description 2",
                            RepairCost = 700.00m,
                            RepairDate = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 3
                        },
                        new
                        {
                            Id = 3,
                            Description = "Repair description 3",
                            RepairCost = 600.00m,
                            RepairDate = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 4
                        },
                        new
                        {
                            Id = 4,
                            Description = "Repair description 4",
                            RepairCost = 800.00m,
                            RepairDate = new DateTime(2023, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 5
                        },
                        new
                        {
                            Id = 5,
                            Description = "Repair description 5",
                            RepairCost = 900.00m,
                            RepairDate = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 6
                        },
                        new
                        {
                            Id = 6,
                            Description = "Repair description 6",
                            RepairCost = 1000.00m,
                            RepairDate = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 7
                        },
                        new
                        {
                            Id = 7,
                            Description = "Repair description 7",
                            RepairCost = 1100.00m,
                            RepairDate = new DateTime(2023, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 8
                        },
                        new
                        {
                            Id = 8,
                            Description = "Repair description 8",
                            RepairCost = 1200.00m,
                            RepairDate = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 10
                        });
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SalePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SaleDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalePrice = 20000.00m,
                            VehicleId = 5
                        },
                        new
                        {
                            Id = 2,
                            SaleDate = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalePrice = 15000.00m,
                            VehicleId = 3
                        });
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.TypeOfMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeOfMedias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Image"
                        },
                        new
                        {
                            Id = 2,
                            Type = "PDF"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Doc"
                        });
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleBrandId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleModelId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleTrimId")
                        .HasColumnType("int");

                    b.Property<int>("YearOfProductionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleBrandId");

                    b.HasIndex("VehicleModelId");

                    b.HasIndex("VehicleTrimId");

                    b.HasIndex("YearOfProductionId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Vehicle description 1",
                            Label = "Vehicle 1",
                            Status = 1,
                            VIN = "1HGCM82633A123456",
                            VehicleBrandId = 1,
                            VehicleModelId = 4,
                            VehicleTrimId = 1,
                            YearOfProductionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Vehicle description 2",
                            Label = "Vehicle 2",
                            Status = 0,
                            VIN = "1HGCM82633A654321",
                            VehicleBrandId = 2,
                            VehicleModelId = 2,
                            VehicleTrimId = 1,
                            YearOfProductionId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Vehicle description 3",
                            Label = "Vehicle 3",
                            Status = 0,
                            VIN = "1HGCM82633A789456",
                            VehicleBrandId = 3,
                            VehicleModelId = 3,
                            VehicleTrimId = 2,
                            YearOfProductionId = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "Vehicle description 4",
                            Label = "Vehicle 4",
                            Status = 1,
                            VIN = "1HGCM82633A987654",
                            VehicleBrandId = 4,
                            VehicleModelId = 4,
                            VehicleTrimId = 3,
                            YearOfProductionId = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "Vehicle description 5",
                            Label = "Vehicle 5",
                            Status = 2,
                            VIN = "1HGCM82633A456789",
                            VehicleBrandId = 5,
                            VehicleModelId = 5,
                            VehicleTrimId = 4,
                            YearOfProductionId = 5
                        },
                        new
                        {
                            Id = 6,
                            Description = "Vehicle description 6",
                            Label = "Vehicle 6",
                            Status = 1,
                            VIN = "1HGCM82633A321654",
                            VehicleBrandId = 6,
                            VehicleModelId = 6,
                            VehicleTrimId = 5,
                            YearOfProductionId = 6
                        },
                        new
                        {
                            Id = 7,
                            Description = "Vehicle description 7",
                            Label = "Vehicle 7",
                            Status = 1,
                            VIN = "1HGCM82633A159753",
                            VehicleBrandId = 7,
                            VehicleModelId = 7,
                            VehicleTrimId = 6,
                            YearOfProductionId = 7
                        },
                        new
                        {
                            Id = 8,
                            Description = "Vehicle description 8",
                            Label = "Vehicle 8",
                            Status = 2,
                            VIN = "1HGCM82633A357951",
                            VehicleBrandId = 8,
                            VehicleModelId = 8,
                            VehicleTrimId = 7,
                            YearOfProductionId = 8
                        },
                        new
                        {
                            Id = 9,
                            Description = "Vehicle description 9",
                            Label = "Vehicle 9",
                            Status = 0,
                            VIN = "1HGCM82633A753159",
                            VehicleBrandId = 9,
                            VehicleModelId = 9,
                            VehicleTrimId = 8,
                            YearOfProductionId = 9
                        },
                        new
                        {
                            Id = 10,
                            Description = "Vehicle description 10",
                            Label = "Vehicle 10",
                            Status = 1,
                            VIN = "1HGCM82633A852963",
                            VehicleBrandId = 10,
                            VehicleModelId = 10,
                            VehicleTrimId = 9,
                            YearOfProductionId = 10
                        });
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.VehicleBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleBrandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VehicleBrands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Toyota",
                            VehicleBrandId = 0
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Ford",
                            VehicleBrandId = 0
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Honda",
                            VehicleBrandId = 0
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Chevrolet",
                            VehicleBrandId = 0
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Nissan",
                            VehicleBrandId = 0
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Volkswagen",
                            VehicleBrandId = 0
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Renault",
                            VehicleBrandId = 0
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Peugeot",
                            VehicleBrandId = 0
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Citroën",
                            VehicleBrandId = 0
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Jeep",
                            VehicleBrandId = 0
                        },
                        new
                        {
                            Id = 11,
                            Brand = "Mazda",
                            VehicleBrandId = 0
                        });
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.VehicleMedia", b =>
                {
                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("VehicleId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("VehicleMedias");

                    b.HasData(
                        new
                        {
                            VehicleId = 1,
                            MediaId = 1
                        },
                        new
                        {
                            VehicleId = 2,
                            MediaId = 2
                        },
                        new
                        {
                            VehicleId = 3,
                            MediaId = 3
                        },
                        new
                        {
                            VehicleId = 4,
                            MediaId = 4
                        },
                        new
                        {
                            VehicleId = 5,
                            MediaId = 5
                        },
                        new
                        {
                            VehicleId = 6,
                            MediaId = 6
                        },
                        new
                        {
                            VehicleId = 7,
                            MediaId = 7
                        },
                        new
                        {
                            VehicleId = 8,
                            MediaId = 8
                        },
                        new
                        {
                            VehicleId = 9,
                            MediaId = 9
                        },
                        new
                        {
                            VehicleId = 10,
                            MediaId = 10
                        });
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.VehicleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleBrandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleBrandId");

                    b.ToTable("VehicleModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Model = "Corolla",
                            VehicleBrandId = 1
                        },
                        new
                        {
                            Id = 2,
                            Model = "Focus",
                            VehicleBrandId = 2
                        },
                        new
                        {
                            Id = 3,
                            Model = "Civic",
                            VehicleBrandId = 3
                        },
                        new
                        {
                            Id = 4,
                            Model = "Impala",
                            VehicleBrandId = 4
                        },
                        new
                        {
                            Id = 5,
                            Model = "Altima",
                            VehicleBrandId = 5
                        },
                        new
                        {
                            Id = 6,
                            Model = "Golf",
                            VehicleBrandId = 6
                        },
                        new
                        {
                            Id = 7,
                            Model = "Clio",
                            VehicleBrandId = 7
                        },
                        new
                        {
                            Id = 8,
                            Model = "208",
                            VehicleBrandId = 8
                        },
                        new
                        {
                            Id = 9,
                            Model = "C3",
                            VehicleBrandId = 9
                        },
                        new
                        {
                            Id = 10,
                            Model = "Wrangler",
                            VehicleBrandId = 10
                        },
                        new
                        {
                            Id = 11,
                            Model = "CX-5",
                            VehicleBrandId = 11
                        });
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.VehicleModelVehicleTrim", b =>
                {
                    b.Property<int>("VehicleModelId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleTrimId")
                        .HasColumnType("int");

                    b.HasKey("VehicleModelId", "VehicleTrimId");

                    b.HasIndex("VehicleTrimId");

                    b.ToTable("VehicleModelVehicleTrims");

                    b.HasData(
                        new
                        {
                            VehicleModelId = 1,
                            VehicleTrimId = 1
                        },
                        new
                        {
                            VehicleModelId = 1,
                            VehicleTrimId = 2
                        },
                        new
                        {
                            VehicleModelId = 2,
                            VehicleTrimId = 1
                        },
                        new
                        {
                            VehicleModelId = 2,
                            VehicleTrimId = 3
                        },
                        new
                        {
                            VehicleModelId = 3,
                            VehicleTrimId = 2
                        },
                        new
                        {
                            VehicleModelId = 3,
                            VehicleTrimId = 4
                        },
                        new
                        {
                            VehicleModelId = 4,
                            VehicleTrimId = 3
                        },
                        new
                        {
                            VehicleModelId = 4,
                            VehicleTrimId = 5
                        },
                        new
                        {
                            VehicleModelId = 5,
                            VehicleTrimId = 4
                        });
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.VehicleTrim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TrimLabel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleTrims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TrimLabel = "Base"
                        },
                        new
                        {
                            Id = 2,
                            TrimLabel = "SE"
                        },
                        new
                        {
                            Id = 3,
                            TrimLabel = "LE"
                        },
                        new
                        {
                            Id = 4,
                            TrimLabel = "S"
                        },
                        new
                        {
                            Id = 5,
                            TrimLabel = "SE"
                        },
                        new
                        {
                            Id = 6,
                            TrimLabel = "Titanium"
                        },
                        new
                        {
                            Id = 7,
                            TrimLabel = "LX"
                        },
                        new
                        {
                            Id = 8,
                            TrimLabel = "EX"
                        },
                        new
                        {
                            Id = 9,
                            TrimLabel = "Touring"
                        });
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.YearOfProduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("YearOfProductions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Year = 1990
                        },
                        new
                        {
                            Id = 2,
                            Year = 1991
                        },
                        new
                        {
                            Id = 3,
                            Year = 1992
                        },
                        new
                        {
                            Id = 4,
                            Year = 1993
                        },
                        new
                        {
                            Id = 5,
                            Year = 1994
                        },
                        new
                        {
                            Id = 6,
                            Year = 1995
                        },
                        new
                        {
                            Id = 7,
                            Year = 1996
                        },
                        new
                        {
                            Id = 8,
                            Year = 1997
                        },
                        new
                        {
                            Id = 9,
                            Year = 1998
                        },
                        new
                        {
                            Id = 10,
                            Year = 1999
                        },
                        new
                        {
                            Id = 11,
                            Year = 2000
                        },
                        new
                        {
                            Id = 12,
                            Year = 2001
                        },
                        new
                        {
                            Id = 13,
                            Year = 2002
                        },
                        new
                        {
                            Id = 14,
                            Year = 2003
                        },
                        new
                        {
                            Id = 15,
                            Year = 2004
                        },
                        new
                        {
                            Id = 16,
                            Year = 2005
                        },
                        new
                        {
                            Id = 17,
                            Year = 2006
                        },
                        new
                        {
                            Id = 18,
                            Year = 2007
                        },
                        new
                        {
                            Id = 19,
                            Year = 2008
                        },
                        new
                        {
                            Id = 20,
                            Year = 2009
                        },
                        new
                        {
                            Id = 21,
                            Year = 2010
                        },
                        new
                        {
                            Id = 22,
                            Year = 2011
                        },
                        new
                        {
                            Id = 23,
                            Year = 2012
                        },
                        new
                        {
                            Id = 24,
                            Year = 2013
                        },
                        new
                        {
                            Id = 25,
                            Year = 2014
                        },
                        new
                        {
                            Id = 26,
                            Year = 2015
                        },
                        new
                        {
                            Id = 27,
                            Year = 2016
                        },
                        new
                        {
                            Id = 28,
                            Year = 2017
                        },
                        new
                        {
                            Id = 29,
                            Year = 2018
                        },
                        new
                        {
                            Id = 30,
                            Year = 2019
                        },
                        new
                        {
                            Id = 31,
                            Year = 2020
                        },
                        new
                        {
                            Id = 32,
                            Year = 2021
                        },
                        new
                        {
                            Id = 33,
                            Year = 2022
                        },
                        new
                        {
                            Id = 34,
                            Year = 2023
                        },
                        new
                        {
                            Id = 35,
                            Year = 2024
                        },
                        new
                        {
                            Id = 36,
                            Year = 2025
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.Media", b =>
                {
                    b.HasOne("P5CreateFirstAppDotNet.Models.Entities.TypeOfMedia", "TypeOfMedia")
                        .WithMany()
                        .HasForeignKey("TypeOfMediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeOfMedia");
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.Purchase", b =>
                {
                    b.HasOne("P5CreateFirstAppDotNet.Models.Entities.Vehicle", "Vehicle")
                        .WithMany("Purchases")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.Repair", b =>
                {
                    b.HasOne("P5CreateFirstAppDotNet.Models.Entities.Vehicle", "Vehicle")
                        .WithMany("Repairs")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.Sale", b =>
                {
                    b.HasOne("P5CreateFirstAppDotNet.Models.Entities.Vehicle", "Vehicle")
                        .WithMany("Sales")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.Vehicle", b =>
                {
                    b.HasOne("P5CreateFirstAppDotNet.Models.Entities.VehicleBrand", "VehicleBrand")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P5CreateFirstAppDotNet.Models.Entities.VehicleModel", "VehicleModel")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("P5CreateFirstAppDotNet.Models.Entities.VehicleTrim", "VehicleTrim")
                        .WithMany()
                        .HasForeignKey("VehicleTrimId");

                    b.HasOne("P5CreateFirstAppDotNet.Models.Entities.YearOfProduction", "YearOfProduction")
                        .WithMany("Vehicles")
                        .HasForeignKey("YearOfProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleBrand");

                    b.Navigation("VehicleModel");

                    b.Navigation("VehicleTrim");

                    b.Navigation("YearOfProduction");
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.VehicleMedia", b =>
                {
                    b.HasOne("P5CreateFirstAppDotNet.Models.Entities.Media", "Media")
                        .WithMany("VehicleMedia")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P5CreateFirstAppDotNet.Models.Entities.Vehicle", "Vehicle")
                        .WithMany("VehicleMedia")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Media");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.VehicleModel", b =>
                {
                    b.HasOne("P5CreateFirstAppDotNet.Models.Entities.VehicleBrand", "VehicleBrand")
                        .WithMany("VehicleModels")
                        .HasForeignKey("VehicleBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleBrand");
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.VehicleModelVehicleTrim", b =>
                {
                    b.HasOne("P5CreateFirstAppDotNet.Models.Entities.VehicleModel", "VehicleModel")
                        .WithMany("VehicleModelVehicleTrims")
                        .HasForeignKey("VehicleModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P5CreateFirstAppDotNet.Models.Entities.VehicleTrim", "VehicleTrim")
                        .WithMany("VehicleModelVehicleTrims")
                        .HasForeignKey("VehicleTrimId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VehicleModel");

                    b.Navigation("VehicleTrim");
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.Media", b =>
                {
                    b.Navigation("VehicleMedia");
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.Vehicle", b =>
                {
                    b.Navigation("Purchases");

                    b.Navigation("Repairs");

                    b.Navigation("Sales");

                    b.Navigation("VehicleMedia");
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.VehicleBrand", b =>
                {
                    b.Navigation("VehicleModels");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.VehicleModel", b =>
                {
                    b.Navigation("VehicleModelVehicleTrims");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.VehicleTrim", b =>
                {
                    b.Navigation("VehicleModelVehicleTrims");
                });

            modelBuilder.Entity("P5CreateFirstAppDotNet.Models.Entities.YearOfProduction", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
